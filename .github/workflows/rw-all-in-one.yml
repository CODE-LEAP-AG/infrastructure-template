name: "rw-all-in-one"

on:
  workflow_call:
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
    inputs:
      acr:
        required: true
        type: string
      cluster-name:
        required: true
        type: string
      resource-group-name:
        required: true
        type: string
      project:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Build and Test React app
        run: |
          npm install
          npm run build
          npm test
        working-directory: ${{ github.workspace }}/${{ inputs.project }}

  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Azure CLI login
        uses: azure/login@v2.1.1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      - name: Login to ACR
        run: az acr login --name "${{ inputs.acr }}"
      - name: Build and push Docker image
        run: |
          docker build -t "${{ inputs.acr }}/${{ inputs.project }}:${{ github.event.number }}" .
          docker push "${{ inputs.acr }}/${{ inputs.project }}:${{ github.event.number }}"
        working-directory: ${{ github.workspace }}/${{ inputs.project }}
  
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Azure CLI login
        uses: azure/login@v2.1.1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      - name: Update kube-config
        run: az aks get-credentials --resource-group "${{ inputs.resource-group-name }}" --name "${{ inputs.cluster-name }}"
      - name: Install Helm
        uses: azure/setup-helm@v4
      - name: Apply Helm chart
        run: helm upgrade --install ${{ inputs.project }} . --set image.tag="${{ github.event.number }}" --set image.repository="${{ inputs.acr }}/${{ inputs.project }}"
        working-directory: ${{ github.workspace }}/infrastructure/helm-chart/${{ inputs.project }}
 